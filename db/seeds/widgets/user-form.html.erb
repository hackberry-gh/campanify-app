<article id="user-form" class="form">
    <%= form_for(User.new, :as => :user, :url => registration_path(:user), 
    	:remote => true,
		:html => {
		:"data-collection" => "users",	
		:"data-member" => "user",
		:"data-type" => "json",
		:"data-post-action" => "after_sign_up",
		:"data-find_by" => "id",		
		:"data-translated-member" => t('activerecord.models.user')
		}) do |f| %>

		<legend><%== t('html.registration_form.legend') %></legend>

		<div id="error_explanation" class="hidden"></div>
		
		<fieldset>
			<% Settings.user_setting("fields", current_branch).map(&:to_sym).each do |field| %>
		  <div>
		  	<%= f.text_field field, 
						:"data-label" => t("activerecord.attributes.user.#{field}"), 
						:placeholder => t("activerecord.attributes.user.#{field}") 
				%>
			</div>
			<% end %>	
		</fieldset>

		<% if Settings.user_setting("password_required",current_branch) == "always" %>
		<fieldset>			
		  <div>
		  	<%= f.password_field :password,
				:"data-label" => t("activerecord.attributes.user.password"), 
				:placeholder => t("activerecord.attributes.user.password") %>
			</div>

		  <div>
		  	<%= f.password_field :password_confirmation,
				:"data-label" => t("activerecord.attributes.user.password_confirmation"), 
				:placeholder => t("activerecord.attributes.user.password_confirmation") %>		
		
			</div>
		</fieldset>			
		<% end %>
		
		<% unless Settings.user_setting("options",current_branch).empty? %>
		<fieldset>
			<% Settings.user_setting("options",current_branch).each do |field, checked| %>
	  	<div>
				<%= f.label field.to_sym %>
	  		<%= f.check_box field.to_sym, :checked => checked,
						:"data-label" => t("activerecord.attributes.user.#{field}") %>
			</div>
			<% end %>	
		</fieldset>
		<% end %>
	  <div class="actions"><%= f.submit t('html.registration_form.submit') %></div>

	<% end %>

	<nav class="links">
<% if controller_name != 'sessions' && !defined?(skip_login)  %>
  <%= link_to t('html.links.login'), new_session_path(resource_name) %>
<% end %>

<% if devise_mapping.omniauthable? && Settings.facebook["connect"] %>
  <% User.omniauth_providers.each do |provider| %>
    <%= link_to t("html.links.login_with",:provider => provider.to_s.titleize), omniauth_authorize_path(resource_name, provider) %>
  <% end %>
<% end %>
	</nav>
</article>